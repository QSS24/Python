Interacting_Databases.py

Import sqlite, PostgreSQL, GraphQL, Oracle_CX, 
From collection import OrderedDict
Import os, time
Import Engines [ ] 

Declare Global: 
    path = ~/usr/bin/venv/*QSS24_Databases
    new_Db     = os.join(path())
    Declare -a Unauthorized_users = [ Copiers, Ersat, Delusioned_Confucius ]

@Path(Kwargs**):
Class DatabasesApi (Args**, Kwargs**):
        Connect = Connection() \n
                 connection.connect()
        Cursor = Connection.Connect()  
        Def _Create_Table (Cursor) :
             Action = Cursor.Execute()
             Rains = Action(Create "table Raining not null varchar(265)")\n
             Columns = Cursor.Execute(Create " Collumns (' GUID Incremental not null int Primary Key (GUID);\n
                    Last_Name Varchar(265) not null Secondary Key (Last_Name); \n
                    First_Name ...
                    DOB not null int; \n
                    Date_hired not null int; \n
                    " ) )

        Def Views(Cursor, Kwargs**):
            New_views = Cursor.Execute(Create " Permanent Views Users_Copied \n
                From Rains Select Last_name as Q
                Where (Q %Sinner|python% ) && Q.GUID = 
                Sort by Ascending off set 10
                return { New_views } 

         Def Triggers(Cursor, Kwargs**):
               

                

@DatabaseApi:
       Class _Auth( DatabaseApi, Kwargs**):
             Revoke = Action(Revoke ' Unauthorized_users from Rains ' )
             
             
